---
AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a Terra network on an Amazon ECS cluster, including Network Stats and Explorer services.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Terra network parameters
        Parameters:
          - NetworkID
          - GasPriceFloor
          - TerraNodeLogLevel
          - BlockGasLimit

      - Label:
          default: Terra network parameters
        Parameters:
          - InitialDifficulty
          - InitialAccountAddresses
          - InitialAccountBalance
          - MinerAccountAddress
          - InitialBlockGasLimit

      - Label:
          default: Platform configuration
        Parameters:
          - EC2InstanceType

      - Label:
          default: VPC network configuration
        Parameters:
          - VPCID
          - NetworkSubnetIDs
          - ALBSubnetIDs

      - Label:
          default: Security Configuration
        Parameters:
          - EC2KeyPairName
          - EC2SecurityGroup
          - ECSRoleForALB
          - EC2InstanceProfileArn
          - LoadBalancerSecurityGroup

      - Label:
          default: ECS cluster configuration
        Parameters:
          - NumberOfEC2Instances
          - NumberOfTerraClients
          - NumberOfTerraMiners

      - Label:
          default: TerraStats
        Parameters:
          - RunTerraStats
          - TerraStatsSecret

      - Label:
          default: TerraExplorer
        Parameters:
          - RunTerraExplorer

    ParameterLabels:
      NetworkSubnetIDs:
        default: List of VPC Subnets to use
      NumberOfTerraClients:
        default: Number of Terra Clients
      NumberOfTerraMiners:
        default: Number of Terra Miners
      InitialAccountAddresses:
        default: Initial List of Accounts
      NetworkID:
        default: Terra Network ID
      MinerAccountAddress:
        default: Miner Account Address
      BlockGasLimit:
        default: Target Block Gas Limit
      InitialBlockGasLimit:
        default: Initial Block Gas Limit
      TerraNodeLogLevel:
        default: Terra Node Log Level
      EC2KeyPairName:
        default: EC2 Key Pair
      EC2SecurityGroup:
        default: EC2 Security Group
      ECSRoleForALB:
        default: IAM Role for ECS to interact with the Application Load Balancer
      RunTerraExplorer:
        default: Deploy TerraExplorer
      RunTerraStats:
        default: Deploy TerraStats
      NumberOfEC2Instances:
        default: EC2 Instance Count for ECS
      EC2InstanceType:
        default: EC2 Instance Type
      EC2InstanceProfileArn:
        default: EC2 Instance Profile ARN
      GasPriceFloor:
        default: Gas Price Floor
      InitialAccountBalance:
        default: Initial Account Balance
      TerraStatsSecret:
        default: TerraStats Connection Secret
      NestedTemplateURL:
        default: Nested Template URL
      ALBSubnetIDs:
        default: ALB Subnet IDs
      VPCID:
        default: VPC ID
      InitialDifficulty:
        default: Initial Mining Difficulty
      LoadBalancerSecurityGroup:
        default: Application Load Balancer Security Group

Parameters:
  VPCID:
    Description: The ID of the VPC into which to launch the stack resources.
    Type: AWS::EC2::VPC::Id
  NetworkSubnetIDs:
    Description: The ID of one or more subnets into which the Terra network is launched. Subnets can be public or private but cannot be mixed. We recommend private subnets.
    Type: List<AWS::EC2::Subnet::Id>
  ALBSubnetIDs:
    Description: The IDs of at least two subnets into which the Application Load Balancer is launched. These should be in different Availability Zones.
    Type: List<AWS::EC2::Subnet::Id>
    MinLength: 2
  NumberOfTerraClients:
    Type: Number
    Default: '1'
    MinValue: 1
    MaxValue: 20
    Description: There must be at least one Terra client.
    ConstraintDescription: You must have at least one Terra client.
  NumberOfTerraMiners:
    Type: Number
    Default: '1'
    MinValue: 0
    MaxValue: 20
    Description: Miners are optional. For private networks, you should start at least 1 miner.
  InitialAccountAddresses:
    Type: String
    Default: "0x627306090abab3a6e1400e9345bc60c78a8bef57,0xf17f52151ebef6c7334fad080c5704d77216b732,0xc5fdf4076b8f3a5357c5e395ab970b5b54098fef,0x821aea9a577a9b44299b9c15c88cf3087f3b5544,0x0d1d4e623d10f9fba5db95830f7d3839406c6af2"
    Description: A comma-separated list of account addresses that are funded when the private network starts.
    AllowedPattern: "^(0x[a-fA-F0-9]{40})(,0x[a-fA-F0-9]{40})*$"
  InitialAccountBalance:
    Type: Number
    Default: '1000'
    Description: The starting balance in ether for each of the initial accounts.
    MinValue: 0
  MinerAccountAddress:
    Type: String
    Default: '0x5aeda56215b167893e80b4fe645ba6d5bab767de'
    Description: The account address to which newly mined ether is awarded.
    AllowedPattern: "^(0x[a-fA-F0-9]{40})$"
  InitialDifficulty:
    Type: Number
    Default: "1"
    MinValue: 1
    Description: If you set this higher than 1, the miner may not be able to mine blocks.
    ConstraintDescription: Must enter an initial difficulty greater than or equal to 1.
  NetworkID:
    Type: Number
    Description: The ID of the Terra network. An ID between 1 and 4 specifies public Terra networks. Public networks do not require private Terra network parameters, which are used in the genesis block.
    Default: '1234'
    MinValue: 1
    MaxValue: 100000
    ConstraintDescription: The ID of the network must be between 1 and 100000.
  BlockGasLimit:
    Type: Number
    Default: '8000000'
    Description: The limit on the total amount of gas that can be spent for transactions in a block. This is the target block gas limit for the miner, not the starting block gas limit set in the genesis block.
    MinValue: 1000000
    MaxValue: 1000000000
    ConstraintDescription: Block Gas Limit must be between 1 million and 1 billion.
  InitialBlockGasLimit:
    Type: Number
    Default: '8000000'
    Description: The initial limit on the total amount of gas that can be spent for transactions in a block. This is the starting block gas limit set in the genesis block, not the target block gas limit for the miner.
    MinValue: 1000000
    MaxValue: 1000000000
    ConstraintDescription: Block Gas Limit must be between 1 million and 1 billion.
  GasPriceFloor:
    Type: Number
    Default: '0'
    Description: The minimum gas price for a transaction that the miners accept to include a transaction in a block in WEI.
    MinValue: 0
    MaxValue: 1000000000000
    ConstraintDescription: You shouldn't set this to more than 1000 GWEI.
  RunTerraExplorer:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
  RunTerraStats:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
  EC2InstanceProfileArn:
    Type: String
    Description: The ARN of the role to associate with EC2 instances in the stack. The role must have permissions to write to the Amazon DynamoDB peer table.
  EC2KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The name of an existing EC2 key pair to enable access to EC2 instances in the stack.
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The name of an existing security group to assign to EC2 instances.
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The name of an existing security group to assign to the Application Load Balancer in the stack.
  ECSRoleForALB:
    Type: String
    Description: The ARN of the role that ECS uses to interact with Application Load Balancers.
  NumberOfEC2Instances:
    Type: Number
    Default: '2'
    Description: The total number of EC2 instances to launch for ECS. This must equal the sum of Terra clients and miners.
  EC2InstanceType:
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
    ConstraintDescription: Please choose a valid instance type.
  TerraStatsSecret:
    Type: String
    Default: "password12345"
    NoEcho: true
    MinLength: 6
    MaxLength: 16
    ConstraintDescription: Secret must be between 6 and 16 characters.
  TerraNodeLogLevel:
    Type: String
    Default: "info"
    AllowedValues:
      - "trace"
      - "debug"
      - "info"
      - "warn"
      - "error"
      - "fatal"
    Description: "The log level of the Terra node"

  NestedTemplateURL:
    Type: String
    Default: https://s3.amazonaws.com/terra-network/
    Description: The key prefix for where the nested CloudFormation templates are stored

Mappings:
  RegionToResourceRegion:
    us-east-1:
      to: us-east-1
    us-east-2:
      to: us-east-2
    us-west-2:
      to: us-west-2
    us-west-1:
      to: us-west-2
    ca-central-1:
      to: us-east-1
    eu-central-1:
      to: us-east-1
    eu-west-1:
      to: us-east-1
    eu-west-2:
      to: us-east-1
    eu-west-3:
      to: us-east-1
    ap-northeast-2:
      to: us-east-1
    ap-northeast-1:
      to: us-east-1
    ap-southeast-2:
      to: us-east-1
    ap-southeast-1:
      to: us-east-1
    sa-east-1:
      to: us-east-1
    ap-south-1:
      to: us-east-1

  RegionInformationMap:
    us-east-1:
      ResourceAccountId: 354658284331
    us-east-2:
      ResourceAccountId: 763976151875
    us-west-2:
      ResourceAccountId: 712425161857

Resources:
  TerraCommonStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${NestedTemplateURL}terra-common.template.yaml"
      Parameters:
        VPCID:
          Ref: VPCID
        NetworkSubnetIDs:
          Fn::Join:
            - ","
            - Ref: NetworkSubnetIDs
        ALBSubnetIDs:
          Fn::Join:
            - ","
            - Ref: ALBSubnetIDs
        NumberOfTerraClients:
          Ref: NumberOfTerraClients
        NumberOfTerraMiners:
          Ref: NumberOfTerraMiners
        InitialAccountAddresses:
          Ref: InitialAccountAddresses
        NetworkID:
          Ref: NetworkID
        BlockGasLimit:
          Ref: BlockGasLimit
        InitialBlockGasLimit:
          Ref: InitialBlockGasLimit
        EC2InstanceProfileArn:
          Ref: EC2InstanceProfileArn
        EC2KeyPairName:
          Ref: EC2KeyPairName
        EC2SecurityGroup:
          Ref: EC2SecurityGroup
        ECSRoleForALB:
          Ref: ECSRoleForALB
        NumberOfEC2Instances:
          Ref: NumberOfEC2Instances
        EC2InstanceType:
          Ref: EC2InstanceType
        RootStackName:
          Ref: AWS::StackName
        MinerAccountAddress:
          Ref: MinerAccountAddress
        TerraNodeLogLevel:
          Ref: TerraNodeLogLevel
        RunTerraExplorer:
          Ref: RunTerraExplorer
        RunTerraStats:
          Ref: RunTerraStats
        TerraStatsSecret:
          Ref: TerraStatsSecret
        InitialDifficulty:
          Ref: InitialDifficulty
        InitialAccountBalance:
          Ref: InitialAccountBalance
        GasPriceFloor:
          Ref: GasPriceFloor
        LoadBalancerSecurityGroup:
          Ref: LoadBalancerSecurityGroup
        ClusterName:
          Fn::Sub: "${AWS::StackName}-Terra"
        DockerRegion:
          Fn::FindInMap:
            - RegionToResourceRegion
            - Ref: AWS::Region
            - to
        DockerECRAccount:
          Fn::FindInMap:
            - RegionInformationMap
            - Fn::FindInMap:
              - RegionToResourceRegion
              - Ref: AWS::Region
              - to
            - ResourceAccountId
        TerraDockerImage:
          Fn::Sub:
            - "${DockerECRAccount}.dkr.ecr.${DockerRegion}.amazonaws.com/client-go:v1"
            - DockerRegion:
                Fn::FindInMap:
                  - RegionToResourceRegion
                  - Ref: AWS::Region
                  - to
              DockerECRAccount:
                Fn::FindInMap:
                  - RegionInformationMap
                  - Fn::FindInMap:
                    - RegionToResourceRegion
                    - Ref: AWS::Region
                    - to
                  - ResourceAccountId
        TerraStatsDockerImage:
          Fn::Sub:
            - "${DockerECRAccount}.dkr.ecr.${DockerRegion}.amazonaws.com/eth-netstats:v1"
            - DockerRegion:
                Fn::FindInMap:
                  - RegionToResourceRegion
                  - Ref: AWS::Region
                  - to
              DockerECRAccount:
                Fn::FindInMap:
                  - RegionInformationMap
                  - Fn::FindInMap:
                    - RegionToResourceRegion
                    - Ref: AWS::Region
                    - to
                  - ResourceAccountId
        TerraExplorerDockerImage:
          Fn::Sub:
            - "${DockerECRAccount}.dkr.ecr.${DockerRegion}.amazonaws.com/eth-explorer:v1"
            - DockerRegion:
                Fn::FindInMap:
                  - RegionToResourceRegion
                  - Ref: AWS::Region
                  - to
              DockerECRAccount:
                Fn::FindInMap:
                  - RegionInformationMap
                  - Fn::FindInMap:
                    - RegionToResourceRegion
                    - Ref: AWS::Region
                    - to
                  - ResourceAccountId
        NestedTemplateOrigin: !Ref NestedTemplateURL

Outputs:
  TerraStatsURL:
    Description: "Visit this URL to see the status of your Terra nodes"
    Value:
      Fn::GetAtt: ["TerraCommonStack", "Outputs.TerraStatsURL"]
  TerraExplorerURL:
    Description: "Visit this URL to view transactions on your Terra network"
    Value:
      Fn::GetAtt: ["TerraCommonStack", "Outputs.TerraExplorerURL"]
  TerraJsonRPCURL:
    Description: "Use this URL to access the Geth JSON RPC of your Terra Clients, or input it into Metamask"
    Value:
      Fn::GetAtt: ["TerraCommonStack", "Outputs.TerraJsonRPCURL"]
